version: "3"

services:
  django:
    image: registry.cn-hangzhou.aliyuncs.com/charles0519/music_tag_web:latest
    container_name: music-tag-web
    expose:
      - "8001"
    volumes:
      - D:\:/app/media:z # 配置本地音乐文件夹
    restart: always
    environment:
      dockerrun: "yes"
    depends_on:
      - redis
      - db
    networks:
      - internal
    command: /start
  celeryworker:
    image: registry.cn-hangzhou.aliyuncs.com/charles0519/music_tag_web:latest
    container_name: music_celeryworker
    environment:
      dockerrun: "yes"
    ports: []
    volumes:
      - D:\:/app/media:z # 配置本地音乐文件夹
    depends_on:
      - redis
      - db
    networks:
      - internal
    command: /start-celeryworker
  celerybeat:
    image: registry.cn-hangzhou.aliyuncs.com/charles0519/music_tag_web:latest
    container_name: music_celerybeat
    environment:
      dockerrun: "yes"
    ports: []
    depends_on:
      - redis
      - db
    networks:
      - internal
    command: /start-celerybeat
  redis:
    image: redis:latest
    restart: always
    container_name: music_redis
    networks:
      - internal
    expose:
      - "6379"
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: music3
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - internal
    expose:
      - "3306"
  nginx:
    image: nginx:latest
    restart: always
    container_name: music_nginx
    ports:
      - "9150:80"
    networks:
      - internal
    depends_on:
      - django
    volumes:
      - D:\nginx.conf:/etc/nginx/nginx.conf:ro # 配置nginx.conf
      - D:\:/app/media:z # 配置本地音乐文件夹
networks:
  internal:
